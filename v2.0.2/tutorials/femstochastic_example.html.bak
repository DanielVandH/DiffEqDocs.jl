<!DOCTYPE html>

<html lang="en"><head><meta charset="utf-8"/><meta content="width=device-width, initial-scale=1.0" name="viewport"/><title>Stochastic Finite Element Method · DifferentialEquations.jl</title><link href="https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.min.css" rel="stylesheet" type="text/css"/><link href="https://fonts.googleapis.com/css?family=Lato|Roboto+Mono" rel="stylesheet" type="text/css"/><link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet" type="text/css"/><script>documenterBaseURL=".."</script><script data-main="../assets/documenter.js" src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.2.0/require.min.js"></script><script src="../siteinfo.js"></script><script src="../../versions.js"></script><link href="../assets/highlightjs/default.css" rel="stylesheet" type="text/css"/><link href="../assets/documenter.css" rel="stylesheet" type="text/css"/><meta content="noindex" name="robots"/></head><body><nav class="toc"><a href="../index.html"><img alt="DifferentialEquations.jl logo" class="logo" src="../assets/logo.png"/></a><h1>DifferentialEquations.jl</h1><select id="version-selector" onchange="window.location.href=this.value" style="visibility: hidden"></select><form action="../search.html" class="search"><input id="search-query" name="q" placeholder="Search docs" type="text"/></form><ul><li><a class="toctext" href="../index.html">Home</a></li><li><span class="toctext">Tutorials</span><ul><li><a class="toctext" href="ode_example.html">Ordinary Differential Equations</a></li><li><a class="toctext" href="sde_example.html">Stochastic Differential Equations</a></li><li><a class="toctext" href="rode_example.html">Random Ordinary Differential Equations</a></li><li><a class="toctext" href="dde_example.html">Delay Differential Equations</a></li><li><a class="toctext" href="dae_example.html">Differential Algebraic Equations</a></li><li><a class="toctext" href="discrete_stochastic_example.html">Discrete Stochastic (Gillespie) Equations</a></li><li><a class="toctext" href="jump_diffusion.html">Jump Diffusion Equations</a></li><li><a class="toctext" href="fempoisson_example.html">Poisson Equation Finite Element Method</a></li><li><a class="toctext" href="femheat_example.html">Heat Equation Finite Element Method</a></li><li class="current"><a class="toctext" href="femstochastic_example.html">Stochastic Finite Element Method</a><ul class="internal"><li><a class="toctext" href="#Finite-Element-Stochastic-Poisson-Equation-1">Finite Element Stochastic Poisson Equation</a></li><li><a class="toctext" href="#Finite-Element-Stochastic-Heat-Equation-1">Finite Element Stochastic Heat Equation</a></li></ul></li></ul></li><li><span class="toctext">Basics</span><ul><li><a class="toctext" href="../basics/overview.html">Overview of DifferentialEquations.jl</a></li><li><a class="toctext" href="../basics/common_solver_opts.html">Common Solver Options</a></li><li><a class="toctext" href="../basics/solution.html">Solution Handling</a></li><li><a class="toctext" href="../basics/plot.html">Plot Functions</a></li><li><a class="toctext" href="../basics/integrator.html">Integrator Interface</a></li><li><a class="toctext" href="../basics/compatibility_chart.html">Solver Compatibility Chart</a></li></ul></li><li><span class="toctext">Problem Types</span><ul><li><a class="toctext" href="../types/discrete_types.html">Discrete Problems</a></li><li><a class="toctext" href="../types/ode_types.html">ODE Problems</a></li><li><a class="toctext" href="../types/refined_ode_types.html">Refined ODE Problems</a></li><li><a class="toctext" href="../types/steady_state_types.html">Steady State Problems</a></li><li><a class="toctext" href="../types/sde_types.html">SDE Problems</a></li><li><a class="toctext" href="../types/rode_types.html">RODE Problems</a></li><li><a class="toctext" href="../types/dde_types.html">DDE Problems</a></li><li><a class="toctext" href="../types/dae_types.html">DAE Problems</a></li><li><a class="toctext" href="../types/refined_dae_types.html">Refined DAE Problems</a></li><li><a class="toctext" href="../types/jump_types.html">Jump Problems</a></li><li><a class="toctext" href="../types/fem_types.html">FEM Problems</a></li></ul></li><li><span class="toctext">Solver Algorithms</span><ul><li><a class="toctext" href="../solvers/discrete_solve.html">Discrete Solvers</a></li><li><a class="toctext" href="../solvers/ode_solve.html">ODE Solvers</a></li><li><a class="toctext" href="../solvers/refined_ode_solve.html">Refined ODE Solvers</a></li><li><a class="toctext" href="../solvers/steady_state_solve.html">Steady State Solvers</a></li><li><a class="toctext" href="../solvers/sde_solve.html">SDE Solvers</a></li><li><a class="toctext" href="../solvers/rode_solve.html">RODE Solvers</a></li><li><a class="toctext" href="../solvers/dde_solve.html">DDE Solvers</a></li><li><a class="toctext" href="../solvers/dae_solve.html">DAE Solvers</a></li><li><a class="toctext" href="../solvers/fempoisson_solve.html">FEM Poisson Solvers</a></li><li><a class="toctext" href="../solvers/femheat_solve.html">FEM Heat Solvers</a></li></ul></li><li><span class="toctext">Additional Features</span><ul><li><a class="toctext" href="../features/performance_overloads.html">Performance Overloads</a></li><li><a class="toctext" href="../features/diffeq_arrays.html">DiffEq-Specific Array Types</a></li><li><a class="toctext" href="../features/noise_process.html">Noise Processes</a></li><li><a class="toctext" href="../features/linear_nonlinear.html">Specifying (Non)Linear Solvers</a></li><li><a class="toctext" href="../features/callback_functions.html">Event Handling and Callback Functions</a></li><li><a class="toctext" href="../features/callback_library.html">Callback Library</a></li><li><a class="toctext" href="../features/monte_carlo.html">Parallel Monte Carlo Simulations</a></li><li><a class="toctext" href="../features/io.html">I/O: Saving and Loading Solution Data</a></li><li><a class="toctext" href="../features/low_dep.html">Low Dependency Usage</a></li><li><a class="toctext" href="../features/mesh.html">Meshes</a></li><li><a class="toctext" href="../features/progress_bar.html">Juno Progress Bar Integration</a></li></ul></li><li><span class="toctext">Analysis Tools</span><ul><li><a class="toctext" href="../analysis/parameterized_functions.html">ParameterizedFunctions</a></li><li><a class="toctext" href="../analysis/parameter_estimation.html">Parameter Estimation</a></li><li><a class="toctext" href="../analysis/bifurcation.html">Bifurcation Analysis</a></li><li><a class="toctext" href="../analysis/sensitivity.html">Sensitivity Analysis</a></li><li><a class="toctext" href="../analysis/uncertainty_quantification.html">Uncertainty Quantification</a></li><li><a class="toctext" href="../analysis/dev_and_test.html">Algorithm Development and Testing</a></li></ul></li><li><span class="toctext">Domain Modeling Tools</span><ul><li><a class="toctext" href="../models/multiscale.html">Multi-Scale Models</a></li><li><a class="toctext" href="../models/financial.html">Financial Models</a></li><li><a class="toctext" href="../models/biological.html">Biological Models</a></li></ul></li></ul></nav><article id="docs"><header><nav><ul><li>Tutorials</li><li><a href="femstochastic_example.html">Stochastic Finite Element Method</a></li></ul><a class="edit-page" href="https://github.com/JuliaDiffEq/DiffEqDocs.jl/tree/7800eef5d93234ddf083d3d8c420ea228eacba06/docs/src/tutorials/femstochastic_example.md"><span class="fa"></span> Edit on GitHub</a></nav><hr/><div id="topbar"><span>Stochastic Finite Element Method</span><a class="fa fa-bars" href="#"></a></div></header><h1><a class="nav-anchor" href="#Stochastic-Finite-Element-Method-1" id="Stochastic-Finite-Element-Method-1">Stochastic Finite Element Method</a></h1><p>This tutorial will introduce you to the functionality for solving SPDEs. Other introductions can be found by <a href="https://github.com/JuliaDiffEq/DiffEqTutorials.jl">checking out DiffEqTutorials.jl</a>. This tutorial assumes you have read the <a href="ode_example.html">Ordinary Differential Equations tutorial</a>.</p><p>For most PDE problem types, we can additionally specify them as a stochastic problem by giving the appropriate optional arguments to the constructor. These arguments are a function σ which is the function multiplied to the Brownian increments <span>$dW$</span>, and stochastic, a boolean which we put as true for when the equation is stochastic. Another keyword that is optional is noisetype which specifies the type of noise (the "color" of the noise). By default this is Gaussian (Space-time) White Noise.</p><p>The following examples show how to change the tutorial problems into stochastic problems.</p><h2><a class="nav-anchor" href="#Finite-Element-Stochastic-Poisson-Equation-1" id="Finite-Element-Stochastic-Poisson-Equation-1">Finite Element Stochastic Poisson Equation</a></h2><p>We can solve the same PDE as in the Poisson Tutorial except as the stochastic PDE,  <span>$-Δu=f+gdW$</span>, with additive space-time white noise by specifying the problem as:</p><pre><code class="language-julia">f(x) = sin(2π.*x[:,1]).*cos(2π.*x[:,2])
σ(x) = .01 #Additive noise
dx = 1//2^(5)
mesh = notime_squaremesh([0 1 0 1],dx,:dirichlet)
prob = PoissonProblem(f,mesh,σ=σ)
sol = solve(prob)</code></pre><p>This gives the following plot (with adding the deterministic solution from the previous example):</p><p><img alt="Stochastic Poisson Example Solution" src="https://user-images.githubusercontent.com/1814174/196025314-e3f8b1ab-21ba-4a7d-bee3-150f28c584df.gif"/></p><h2><a class="nav-anchor" href="#Finite-Element-Stochastic-Heat-Equation-1" id="Finite-Element-Stochastic-Heat-Equation-1">Finite Element Stochastic Heat Equation</a></h2><p>This will solve a nonlinear stochastic heat equation <span>$u_t=Δu+f+gdW$</span> with forcing function <code>f(u)=.5-u</code>, noise function <code>g(u)=100u^2</code> and initial condition <code>u0=0</code>. We would expect this system to rise towards the deterministic steady state <code>u=2</code> (but stay in mean a bit below it due to 1st order "Milstein" effects), gaining more noise as it increases. This is specified as follows:</p><pre><code class="language-julia">f(t,x,u)  = ones(size(x,1)) - .5u
u0_func(x) = zeros(size(x,1))
σ(t,x,u) = 1u.^2
tspan = (0.0,5.0)
dx = 1//2^(3)
dt = 1//2^(11)
mesh = parabolic_squaremesh([0 1 0 1],dx,dt,tspan,:neumann)
u0 = u0_func(mesh.node)
prob = HeatProblem(u0,f,mesh,σ=σ)</code></pre><p>We use the following code to create an animation of the solution:</p><pre><code class="language-julia">sol = solve(prob,FEMDiffEqHeatEuler(),save_everystep=true,solver=:LU)
using Plots
animate(sol;zlim=(0,3),cbar=false)</code></pre><p><img alt="Stochastic Heat Solution" src="../assets/stochasticHeatAnimation.gif"/></p><footer><hr/><a class="previous" href="femheat_example.html"><span class="direction">Previous</span><span class="title">Heat Equation Finite Element Method</span></a><a class="next" href="../basics/overview.html"><span class="direction">Next</span><span class="title">Overview of DifferentialEquations.jl</span></a></footer></article></body></html>
